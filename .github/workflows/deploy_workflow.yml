# Simple workflow for deploying static content to GitHub Pages
name: Deploy Home-Page content to Cloud_Storage

on:
  # Runs on pushes targeting the default branch
  push:
    push:
      branches: [ "main" ]
    pull_request:
      branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # workflow that build the docs and synk with cloud_storage
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      # set up python version
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    
    - name: Install Python dependencies
      # install Python dependencies from requirements.txt needed to this worflow automation
      run: |
        python -m pip install --upgrade pip
        pip install -r ./requirements.txt
    
    - name: Build the docs
      # build site artifacts from docs folder, with mkdocs app 
      run: |
        mkdocs build
  
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      # set package from github pages to work on GCP/GCS sync
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v2

      - name: GCS bucket sync
        uses: nf-s/gcs-bucket-sync-action@1.7
        with:
          secrets: ${{ secrets.google_service_account_credentials }}
          bucket: 'professional-summary'
          